name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_ENV: "production"
  NEXT_TELEMETRY_DISABLED: 1
  NEXT_DEBUG: true
  DEBUG: "*"

jobs:
  build:
    name: Build Next.js Site
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Initialize Build Environment
        run: |
          echo "Initializing build environment..."
          mkdir -p logs
          echo "Created logs directory at $(pwd)/logs"
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"

      - name: Detect Package Manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "No package manager configuration found"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: Install Dependencies
        run: |
          echo "Starting dependency installation..."
          ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }} > logs/install.log 2>&1 || {
            echo "Installation failed. Log contents:"
            cat logs/install.log
            exit 1
          }
          echo "Dependencies installed successfully"

      - name: Run Type Checks
        run: |
          echo "Running type checks..."
          ${{ steps.detect-package-manager.outputs.runner }} tsc --noEmit --pretty > logs/typecheck.log 2>&1 || {
            echo "Type checking failed. Log contents:"
            cat logs/typecheck.log
            exit 1
          }
          echo "Type checks completed successfully"

      - name: Build Next.js Project
        run: |
          echo "Running type check..."
          # Run TypeScript compiler in watch mode to get all errors
          ${{ steps.detect-package-manager.outputs.runner }} tsc --noEmit --pretty --diagnostics > type-check.log || true
          
          echo "Starting Next.js build..."
          NEXT_DEBUG=1 ${{ steps.detect-package-manager.outputs.runner }} next build --debug || {
            echo "=== Type Check Output ==="
            cat type-check.log
            echo "=== Build Failed ==="
            exit 1
          }
        env:
          NODE_OPTIONS: "--max-old-space-size=4096 --trace-warnings"
          NEXT_TELEMETRY_DISABLED: 1
          NEXT_DEBUG: 1

      - name: Upload Artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4